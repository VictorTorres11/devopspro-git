Configurações básicas inicias Git :
  - git config --list
  - git config --global user.name "victor.ribeiro"
  - git config --global user.email "victor01_@hotmail.com.br"
  - git config --global core.editor vscode
  - git config --global init.defaultBranch main
  - git config --list
  - git config --system (nível de sistema e indepdente do usuário que logar na máquina vai pegar esses dados)
  - git config pull.rebase false
    Desativar rebase automático
  - git config pull.merge true
    Ativa merge automático em caso de conflitos
    
  
  
Comandos usuais:
  - git init
    Iniciar um repositório na pasta local
  - git status 
    Verificar status do repositório atualmente
  - git add .
    Adicionar arquivos para commit (tracked file)
  - git reset
    Remove arquivos que estavam para fazer commit (untracked file)
  - git commit -m "Mensagem"
    Fazendo commit para subir ao repositório
  - git commit -a -m "Mensagem"
    Fazendo commit para subir ao repositório sem a necessidade de usar o git add
  - git log
    Log dos commits realizados
  - git log -p arquivo.txt
    Mostra as alterações ocorridas em um arquivo específico
  - git checkout (hash)
    Volta para um commit anterior atualizando os arquivos para os commitados naquela vez
  - git checkout main
    Volta para a branch main do repositório e atualiza os arquivos
  - git reset --soft HEAD~1
    Realiza o rollback do último commit mas mantêm as alterações feitas em untracked
  - git reset --hard
    Realiza o rollback do último commit e volta os arquivos do commit anterior

Branchs:
  - git branch feature/novo_arquivo
    Criação de uma nova branch com o nome feature/novo_arquivo
  - git branch
    Listagem de todas as branches disponíveis no repositório
  - git branch -m "name"
  
  - git branch -d name
    Deletar branch utilizada caso a branch ainda não tenha sido mergeada deve ser utilizado -D
  - git checkout -b feature/arquivo_xpto
    cria a branch e troca para a nova branch automáticamente
  - git merge feature/arquivo_xpto
    efetuar merge da branch feature para a main
  - git rebase feature/arquivo_xpto
    Efetua rebase da branch feature para a main não deixa o log de merge, apenas coloca na linha do tempo a branch e carrega todo o histórico.
  - git cherry-pick <hash>
    Pega o commit de outra branch e unifica ao seu commit de outra branch para trabalhar em um hotfix por exemplo.
  - git tag
    Listagem de todas as tags criadas
  - git tag -a v2.0 -m "<Mensagem>"
    Criação de tag na branch situada atualmente no git com o nome v2.0 e mensagem a definir
  - git show v2.0
    Mostrar as informações a respeito da tag v2.0
  - git tag -d v2.0
    Remove a tag definida como v2.0
  - git remote add origin git@<link repo>
    Adicionar o link do git remoto a um repositório já existente
  - git push -u origin main
    Subindo todos os arquivos do repositório da origem main para o git remoto, o comando -u cria um vínculo.
  - git branch -M main
    Renomeio a branch atual para main
  - git push --set-upstream origin novabranch
    Fazendo uma associação da branch local com uma remota para conseguir subir para o repositório remoto
  - git pull
    Verifica se existe alterações remotas não atulizadas no repositório local e ajusta se necessário
  - git fetch origin
    Sobe atualizações do repositório remoto na sua máquina
  - git diff main origin/main
    Verificar diferenças entre branch main com a main remota
  
  
  
.gitignore:
  Utilizado para ignorar na hora do commit certos arquivos como log, arquivos de teste, execução entre outros... serve para evitar excesso de envios ao repositório e utilização de disco de forma desnecessária.
  ex .gitignore:
*.log

